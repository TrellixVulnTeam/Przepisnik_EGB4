{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\przepisnik\\\\src\\\\components\\\\RecipeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport RecipeForm from './RecipeForm';\nimport Recipe from './Recipe';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipeList() {\n  _s();\n\n  const [recipes, setRecipes] = useState([]); // const textareaStorage = firebase.firestore().collection(\"recipeCollection\");\n  // const localData = localStorage.setItem('recipe');\n  // const saveData =\n  // textareaStorage.onSnapshot((querySnapshot) =>{\n  //   const items = [];\n  //   querySnapshot.forEach((doc)=>{\n  //     items.push(doc.data())\n  //   })\n  //   setRecipes(items);\n  // })\n\n  useEffect(() => {\n    localStorage.setItem('recipes', JSON.stringify);\n  }, []); // const addRecipe = recipe => {\n  //   textareaStorage\n  //   .doc()\n  //   .set(recipe)\n  //   .catch((err) => {\n  //     console.error(err);\n  //   });\n  // if (!recipe.text || /^\\s*$/.test(recipe.text)) {\n  //   return;\n  // }\n  // textareaStorage.doc().set(recipe);\n  // const newRecipes = [recipe, ...recipes];\n  // setRecipes(newRecipes);\n  // })\n\n  const updateRecipe = (recipeId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setRecipes(prev => prev.map(item => item.id === recipeId ? newValue : item));\n  };\n\n  const removeRecipe = id => {\n    const removedArr = [...recipes].filter(recipe => recipe.id !== id);\n    setRecipes(removedArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(RecipeForm, {\n      onSubmit: addRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Recipe, {\n      recipes: recipes,\n      removeRecipe: removeRecipe,\n      updateRecipe: updateRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeList, \"xBkrk5r3hhKgEpMO+HGI7yKr/O8=\");\n\n_c = RecipeList;\nexport default RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/przepisnik/src/components/RecipeList.js"],"names":["React","useState","useEffect","RecipeForm","Recipe","firebase","RecipeList","recipes","setRecipes","localStorage","setItem","JSON","stringify","updateRecipe","recipeId","newValue","text","test","prev","map","item","id","removeRecipe","removedArr","filter","recipe","addRecipe"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC,CAFoB,CAGpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAArC;AACD,GAFQ,EAEN,EAFM,CAAT,CAboB,CAiBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAIF,QAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3C,QAAI,CAACA,QAAQ,CAACC,IAAV,IAAkB,QAAQC,IAAR,CAAaF,QAAQ,CAACC,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAEDR,IAAAA,UAAU,CAACU,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYP,QAAZ,GAAuBC,QAAvB,GAAkCK,IAApD,CAAT,CAAV;AACD,GAND;;AAQA,QAAME,YAAY,GAAGD,EAAE,IAAI;AACzB,UAAME,UAAU,GAAG,CAAC,GAAGhB,OAAJ,EAAaiB,MAAb,CAAoBC,MAAM,IAAIA,MAAM,CAACJ,EAAP,KAAcA,EAA5C,CAAnB;AAEAb,IAAAA,UAAU,CAACe,UAAD,CAAV;AACD,GAJD;;AAMA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEG;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,OAAO,EAAEnB,OADX;AAEE,MAAA,YAAY,EAAEe,YAFhB;AAGE,MAAA,YAAY,EAAET;AAHhB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA5DQP,U;;KAAAA,U;AA8DT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport RecipeForm from './RecipeForm';\nimport Recipe from './Recipe';\nimport firebase from 'firebase';\n\nfunction RecipeList() {\n\n  const [recipes, setRecipes] = useState([]);\n  // const textareaStorage = firebase.firestore().collection(\"recipeCollection\");\n  // const localData = localStorage.setItem('recipe');\n  // const saveData =\n  // textareaStorage.onSnapshot((querySnapshot) =>{\n  //   const items = [];\n  //   querySnapshot.forEach((doc)=>{\n  //     items.push(doc.data())\n  //   })\n  //   setRecipes(items);\n  // })\n  useEffect(() => {\n    localStorage.setItem('recipes', JSON.stringify)\n  }, [])\n\n  // const addRecipe = recipe => {\n  //   textareaStorage\n  //   .doc()\n  //   .set(recipe)\n  //   .catch((err) => {\n  //     console.error(err);\n  //   });\n    // if (!recipe.text || /^\\s*$/.test(recipe.text)) {\n    //   return;\n    // }\n    // textareaStorage.doc().set(recipe);\n\n    // const newRecipes = [recipe, ...recipes];\n\n    // setRecipes(newRecipes);\n    // })\n    \n\n\n  const updateRecipe = (recipeId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setRecipes(prev => prev.map(item => (item.id === recipeId ? newValue : item)));\n  };\n\n  const removeRecipe = id => {\n    const removedArr = [...recipes].filter(recipe => recipe.id !== id);\n\n    setRecipes(removedArr);\n  };\n\n  return (\n    <main className=\"main\">\n      <RecipeForm onSubmit={addRecipe} />\n      <Recipe\n        recipes={recipes}\n        removeRecipe={removeRecipe}\n        updateRecipe={updateRecipe}\n      />\n    </main>\n  );\n}\n\nexport default RecipeList;\n"]},"metadata":{},"sourceType":"module"}