{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Lenovo/Desktop/przepisnik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/Lenovo/Desktop/przepisnik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import RecipeForm from'./RecipeForm';import Recipe from'./Recipe';import firebase from'firebase';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RecipeList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),recipes=_useState2[0],setRecipes=_useState2[1];var textareaStorage=firebase.firestore().collection(\"recipeCollection\");// textareaStorage.get().then((snapshot) => {\n//   snapshot.docs.forEach(doc => {\n//     addRecipe(doc);\n//   })\n// })\nvar addRecipe=function addRecipe(recipe){textareaStorage.add({text:recipe});if(!recipe.text||/^\\s*$/.test(recipe.text)){return;}var newRecipes=[recipe].concat(_toConsumableArray(recipes));setRecipes(newRecipes);};var updateRecipe=function updateRecipe(recipeId,newValue){if(!newValue.text||/^\\s*$/.test(newValue.text)){return;}setRecipes(function(prev){return prev.map(function(item){return item.id===recipeId?newValue:item;});});};var removeRecipe=function removeRecipe(id){var removedArr=_toConsumableArray(recipes).filter(function(recipe){return recipe.id!==id;});setRecipes(removedArr);};return/*#__PURE__*/_jsxs(\"main\",{className:\"main\",children:[/*#__PURE__*/_jsx(RecipeForm,{onSubmit:addRecipe}),/*#__PURE__*/_jsx(Recipe,{recipes:recipes,removeRecipe:removeRecipe,updateRecipe:updateRecipe})]});}export default RecipeList;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/przepisnik/src/components/RecipeList.js"],"names":["React","useState","RecipeForm","Recipe","firebase","RecipeList","recipes","setRecipes","textareaStorage","firestore","collection","addRecipe","recipe","add","text","test","newRecipes","updateRecipe","recipeId","newValue","prev","map","item","id","removeRecipe","removedArr","filter"],"mappings":"0TAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,C,wFAEA,QAASC,CAAAA,UAAT,EAAsB,eACUJ,QAAQ,CAAC,EAAD,CADlB,wCACbK,OADa,eACJC,UADI,eAEpB,GAAMC,CAAAA,eAAe,CAAGJ,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,kBAAhC,CAAxB,CAEA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,MAAM,CAAI,CACxBJ,eAAe,CAACK,GAAhB,CAAoB,CACnBC,IAAI,CAAGF,MADY,CAApB,EAGF,GAAI,CAACA,MAAM,CAACE,IAAR,EAAgB,QAAQC,IAAR,CAAaH,MAAM,CAACE,IAApB,CAApB,CAA+C,CAC7C,OACD,CAGD,GAAME,CAAAA,UAAU,EAAIJ,MAAJ,4BAAeN,OAAf,EAAhB,CAEAC,UAAU,CAACS,UAAD,CAAV,CACD,CAZD,CAcA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,CAAWC,QAAX,CAAwB,CAC3C,GAAI,CAACA,QAAQ,CAACL,IAAV,EAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAAtB,CAAmD,CACjD,OACD,CAEDP,UAAU,CAAC,SAAAa,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,CAAS,SAAAC,IAAI,QAAKA,CAAAA,IAAI,CAACC,EAAL,GAAYL,QAAZ,CAAuBC,QAAvB,CAAkCG,IAAvC,EAAb,CAAJ,EAAL,CAAV,CACD,CAND,CAQA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAD,EAAE,CAAI,CACzB,GAAME,CAAAA,UAAU,CAAG,mBAAInB,OAAJ,EAAaoB,MAAb,CAAoB,SAAAd,MAAM,QAAIA,CAAAA,MAAM,CAACW,EAAP,GAAcA,EAAlB,EAA1B,CAAnB,CAEAhB,UAAU,CAACkB,UAAD,CAAV,CACD,CAJD,CAMA,mBACE,cAAM,SAAS,CAAC,MAAhB,wBACE,KAAC,UAAD,EAAY,QAAQ,CAAEd,SAAtB,EADF,cAEE,KAAC,MAAD,EACE,OAAO,CAAEL,OADX,CAEE,YAAY,CAAEkB,YAFhB,CAGE,YAAY,CAAEP,YAHhB,EAFF,GADF,CAUD,CAED,cAAeZ,CAAAA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport RecipeForm from './RecipeForm';\nimport Recipe from './Recipe';\nimport firebase from 'firebase';\n\nfunction RecipeList() {\n  const [recipes, setRecipes] = useState([]);\n  const textareaStorage = firebase.firestore().collection(\"recipeCollection\");\n\n  // textareaStorage.get().then((snapshot) => {\n  //   snapshot.docs.forEach(doc => {\n  //     addRecipe(doc);\n  //   })\n  // })\n\n  const addRecipe = recipe => {\n      textareaStorage.add({\n       text : recipe\n      });\n    if (!recipe.text || /^\\s*$/.test(recipe.text)) {\n      return;\n    }\n\n\n    const newRecipes = [recipe, ...recipes];\n\n    setRecipes(newRecipes);\n  };\n\n  const updateRecipe = (recipeId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setRecipes(prev => prev.map(item => (item.id === recipeId ? newValue : item)));\n  };\n\n  const removeRecipe = id => {\n    const removedArr = [...recipes].filter(recipe => recipe.id !== id);\n\n    setRecipes(removedArr);\n  };\n\n  return (\n    <main className=\"main\">\n      <RecipeForm onSubmit={addRecipe} />\n      <Recipe\n        recipes={recipes}\n        removeRecipe={removeRecipe}\n        updateRecipe={updateRecipe}\n      />\n    </main>\n  );\n}\n\nexport default RecipeList;\n"]},"metadata":{},"sourceType":"module"}