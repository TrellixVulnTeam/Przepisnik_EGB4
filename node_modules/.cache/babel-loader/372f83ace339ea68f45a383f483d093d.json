{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\przepisnik\\\\src\\\\components\\\\RecipeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport RecipeForm from './RecipeForm';\nimport Recipe from './Recipe';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipeList() {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const textareaStorage = firebase.firestore().collection(\"recipeCollection\");\n  const saveData = textareaStorage.onSnapshot(querySnapshot => {\n    const items = [];\n    querySnapshot.forEach(doc => {\n      items.push(doc.data());\n    });\n    setRecipes(items);\n    setLoading(false);\n  });\n  useEffect(() => {\n    saveData(), [];\n  });\n\n  const addRecipe = recipe => {\n    textareaStorage.doc().set(recipe).catch(err => {\n      console.error(err);\n    }); // if (!recipe.text || /^\\s*$/.test(recipe.text)) {\n    //   return;\n    // }\n    // textareaStorage.doc().set(recipe);\n    // const newRecipes = [recipe, ...recipes];\n    // setRecipes(newRecipes);\n  };\n\n  const updateRecipe = (recipeId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setRecipes(prev => prev.map(item => item.id === recipeId ? newValue : item));\n  };\n\n  const removeRecipe = id => {\n    const removedArr = [...recipes].filter(recipe => recipe.id !== id);\n    setRecipes(removedArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Answers:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), recipes.length > 0 ? recipes.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.answer\n      }, post.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 31\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"no answers yet :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeForm, {\n      onSubmit: addRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Recipe, {\n      recipes: recipes,\n      removeRecipe: removeRecipe,\n      updateRecipe: updateRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeList, \"6DQXoev5lBUAFiEzBbVp79DNgWk=\");\n\n_c = RecipeList;\nexport default RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/przepisnik/src/components/RecipeList.js"],"names":["React","useState","useEffect","RecipeForm","Recipe","firebase","RecipeList","recipes","setRecipes","loading","setLoading","textareaStorage","firestore","collection","saveData","onSnapshot","querySnapshot","items","forEach","doc","push","data","addRecipe","recipe","set","catch","err","console","error","updateRecipe","recipeId","newValue","text","test","prev","map","item","id","removeRecipe","removedArr","filter","length","post","answer","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMU,eAAe,GAAGN,QAAQ,CAACO,SAAT,GAAqBC,UAArB,CAAgC,kBAAhC,CAAxB;AAEA,QAAMC,QAAQ,GACdH,eAAe,CAACI,UAAhB,CAA4BC,aAAD,IAAkB;AAC3C,UAAMC,KAAK,GAAG,EAAd;AACAD,IAAAA,aAAa,CAACE,OAAd,CAAuBC,GAAD,IAAO;AAC3BF,MAAAA,KAAK,CAACG,IAAN,CAAWD,GAAG,CAACE,IAAJ,EAAX;AACD,KAFD;AAGAb,IAAAA,UAAU,CAACS,KAAD,CAAV;AACAP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAPD,CADA;AASAR,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,IACT,EADC;AACE,GAFK,CAAT;;AAIA,QAAMQ,SAAS,GAAGC,MAAM,IAAI;AAC1BZ,IAAAA,eAAe,CACdQ,GADD,GAECK,GAFD,CAEKD,MAFL,EAGCE,KAHD,CAGQC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KALD,EAD0B,CAO1B;AACA;AACA;AACA;AAEA;AAEA;AAED,GAhBD;;AAmBA,QAAMG,YAAY,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3C,QAAI,CAACA,QAAQ,CAACC,IAAV,IAAkB,QAAQC,IAAR,CAAaF,QAAQ,CAACC,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAEDxB,IAAAA,UAAU,CAAC0B,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYP,QAAZ,GAAuBC,QAAvB,GAAkCK,IAApD,CAAT,CAAV;AACD,GAND;;AAQA,QAAME,YAAY,GAAGD,EAAE,IAAI;AACzB,UAAME,UAAU,GAAG,CAAC,GAAGhC,OAAJ,EAAaiC,MAAb,CAAoBjB,MAAM,IAAIA,MAAM,CAACc,EAAP,KAAcA,EAA5C,CAAnB;AAEA7B,IAAAA,UAAU,CAAC+B,UAAD,CAAV;AACD,GAJD;;AAMA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEChC,OAAO,CAACkC,MAAR,GAAiB,CAAjB,GACClC,OAAO,CAAC4B,GAAR,CAAaO,IAAD,iBAAU;AAAA,kBAAqBA,IAAI,CAACC;AAA1B,SAAUD,IAAI,CAACE,GAAf;AAAA;AAAA;AAAA;AAAA,cAAtB,CADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEtB;AAAtB;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,MAAD;AACE,MAAA,OAAO,EAAEf,OADX;AAEE,MAAA,YAAY,EAAE+B,YAFhB;AAGE,MAAA,YAAY,EAAET;AAHhB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAtEQvB,U;;KAAAA,U;AAwET,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport RecipeForm from './RecipeForm';\nimport Recipe from './Recipe';\nimport firebase from 'firebase';\n\nfunction RecipeList() {\n\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const textareaStorage = firebase.firestore().collection(\"recipeCollection\");\n\n  const saveData =\n  textareaStorage.onSnapshot((querySnapshot) =>{\n    const items = [];\n    querySnapshot.forEach((doc)=>{\n      items.push(doc.data())\n    })\n    setRecipes(items);\n    setLoading(false);\n  })\n  useEffect(() => {\n    saveData()\n  ,[]});\n\n  const addRecipe = recipe => {\n    textareaStorage\n    .doc()\n    .set(recipe)\n    .catch((err) => {\n      console.error(err);\n    });\n    // if (!recipe.text || /^\\s*$/.test(recipe.text)) {\n    //   return;\n    // }\n    // textareaStorage.doc().set(recipe);\n\n    // const newRecipes = [recipe, ...recipes];\n\n    // setRecipes(newRecipes);\n\n  };\n\n\n  const updateRecipe = (recipeId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setRecipes(prev => prev.map(item => (item.id === recipeId ? newValue : item)));\n  };\n\n  const removeRecipe = id => {\n    const removedArr = [...recipes].filter(recipe => recipe.id !== id);\n\n    setRecipes(removedArr);\n  };\n\n  return (\n    <main className=\"main\">\n      <div className=\"container\">\n      <h1>Answers:</h1>\n      {recipes.length > 0 ? (\n        recipes.map((post) => <div key={post.key}>{post.answer}</div>)\n      ) : (\n        <h1>no answers yet :(</h1>\n      )}\n    </div>\n      <RecipeForm onSubmit={addRecipe} />\n      <Recipe\n        recipes={recipes}\n        removeRecipe={removeRecipe}\n        updateRecipe={updateRecipe}\n      />\n    </main>\n  );\n}\n\nexport default RecipeList;\n"]},"metadata":{},"sourceType":"module"}