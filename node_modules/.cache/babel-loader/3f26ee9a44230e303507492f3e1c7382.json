{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\przepisnik\\\\src\\\\components\\\\RecipeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport RecipeForm from './RecipeForm';\nimport Recipe from './Recipe';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipeList() {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const textareaStorage = firebase.firestore().collection(\"recipeCollection\"); // const saveData =\n  // textareaStorage.onSnapshot((querySnapshot) =>{\n  //   const items = [];\n  //   querySnapshot.forEach((doc)=>{\n  //     items.push(doc.data())\n  //   })\n  //   setRecipes(items);\n  //   setLoading(false);\n  // })\n  // useEffect(() => {\n  //   saveData();\n  // }, [])\n\n  useEffect(() => {\n    const getPostsFromFirebase = [];\n    const subscriber = textareaStorage.onSnapshot(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        getPostsFromFirebase.push({ ...doc.data(),\n          //spread operator\n          key: doc.id // `id` given to us by Firebase\n\n        });\n      });\n      setPosts(getPostsFromFirebase);\n      setLoading(false);\n    });\n    return () => subscriber();\n  }, [loading]); // empty dependencies array => useEffect only called once\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading firebase data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  const addRecipe = recipe => {\n    textareaStorage.doc().set(recipe).catch(err => {\n      console.error(err);\n    }); // if (!recipe.text || /^\\s*$/.test(recipe.text)) {\n    //   return;\n    // }\n    // textareaStorage.doc().set(recipe);\n    // const newRecipes = [recipe, ...recipes];\n    // setRecipes(newRecipes);\n  };\n\n  const updateRecipe = (recipeId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setRecipes(prev => prev.map(item => item.id === recipeId ? newValue : item));\n  };\n\n  const removeRecipe = id => {\n    const removedArr = [...recipes].filter(recipe => recipe.id !== id);\n    setRecipes(removedArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(RecipeForm, {\n      onSubmit: addRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Recipe, {\n      recipes: recipes,\n      removeRecipe: removeRecipe,\n      updateRecipe: updateRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeList, \"6DQXoev5lBUAFiEzBbVp79DNgWk=\");\n\n_c = RecipeList;\nexport default RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/przepisnik/src/components/RecipeList.js"],"names":["React","useState","useEffect","RecipeForm","Recipe","firebase","RecipeList","recipes","setRecipes","loading","setLoading","textareaStorage","firestore","collection","getPostsFromFirebase","subscriber","onSnapshot","querySnapshot","forEach","doc","push","data","key","id","setPosts","addRecipe","recipe","set","catch","err","console","error","updateRecipe","recipeId","newValue","text","test","prev","map","item","removeRecipe","removedArr","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMU,eAAe,GAAGN,QAAQ,CAACO,SAAT,GAAqBC,UAArB,CAAgC,kBAAhC,CAAxB,CAJoB,CAMpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,oBAAoB,GAAG,EAA7B;AACA,UAAMC,UAAU,GAAGJ,eAAe,CAC/BK,UADgB,CACJC,aAAD,IAAmB;AAC7BA,MAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC7BL,QAAAA,oBAAoB,CAACM,IAArB,CAA0B,EACxB,GAAGD,GAAG,CAACE,IAAJ,EADqB;AACT;AACfC,UAAAA,GAAG,EAAEH,GAAG,CAACI,EAFe,CAEX;;AAFW,SAA1B;AAID,OALD;AAMAC,MAAAA,QAAQ,CAACV,oBAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVgB,CAAnB;AAWE,WAAO,MAAMK,UAAU,EAAvB;AACH,GAdQ,EAcN,CAACN,OAAD,CAdM,CAAT,CAlBoB,CAgCL;;AAEf,MAAIA,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMgB,SAAS,GAAGC,MAAM,IAAI;AAC1Bf,IAAAA,eAAe,CACdQ,GADD,GAECQ,GAFD,CAEKD,MAFL,EAGCE,KAHD,CAGQC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KALD,EAD0B,CAO1B;AACA;AACA;AACA;AAEA;AAEA;AAED,GAhBD;;AAmBA,QAAMG,YAAY,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3C,QAAI,CAACA,QAAQ,CAACC,IAAV,IAAkB,QAAQC,IAAR,CAAaF,QAAQ,CAACC,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAED3B,IAAAA,UAAU,CAAC6B,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAAChB,EAAL,KAAYU,QAAZ,GAAuBC,QAAvB,GAAkCK,IAApD,CAAT,CAAV;AACD,GAND;;AAQA,QAAMC,YAAY,GAAGjB,EAAE,IAAI;AACzB,UAAMkB,UAAU,GAAG,CAAC,GAAGlC,OAAJ,EAAamC,MAAb,CAAoBhB,MAAM,IAAIA,MAAM,CAACH,EAAP,KAAcA,EAA5C,CAAnB;AAEAf,IAAAA,UAAU,CAACiC,UAAD,CAAV;AACD,GAJD;;AAMA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEhB;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,OAAO,EAAElB,OADX;AAEE,MAAA,YAAY,EAAEiC,YAFhB;AAGE,MAAA,YAAY,EAAER;AAHhB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAjFQ1B,U;;KAAAA,U;AAmFT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport RecipeForm from './RecipeForm';\nimport Recipe from './Recipe';\nimport firebase from 'firebase';\n\nfunction RecipeList() {\n\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const textareaStorage = firebase.firestore().collection(\"recipeCollection\");\n\n  // const saveData =\n  // textareaStorage.onSnapshot((querySnapshot) =>{\n  //   const items = [];\n  //   querySnapshot.forEach((doc)=>{\n  //     items.push(doc.data())\n  //   })\n  //   setRecipes(items);\n  //   setLoading(false);\n  // })\n  // useEffect(() => {\n  //   saveData();\n  // }, [])\n  useEffect(() => {\n    const getPostsFromFirebase = [];\n    const subscriber = textareaStorage\n      .onSnapshot((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          getPostsFromFirebase.push({\n            ...doc.data(), //spread operator\n            key: doc.id, // `id` given to us by Firebase\n          });\n        });\n        setPosts(getPostsFromFirebase);\n        setLoading(false);\n      });\n      return () => subscriber();\n  }, [loading]); // empty dependencies array => useEffect only called once\n\n  if (loading) {\n    return <h1>loading firebase data...</h1>;\n  }\n\n  const addRecipe = recipe => {\n    textareaStorage\n    .doc()\n    .set(recipe)\n    .catch((err) => {\n      console.error(err);\n    });\n    // if (!recipe.text || /^\\s*$/.test(recipe.text)) {\n    //   return;\n    // }\n    // textareaStorage.doc().set(recipe);\n\n    // const newRecipes = [recipe, ...recipes];\n\n    // setRecipes(newRecipes);\n\n  };\n\n\n  const updateRecipe = (recipeId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setRecipes(prev => prev.map(item => (item.id === recipeId ? newValue : item)));\n  };\n\n  const removeRecipe = id => {\n    const removedArr = [...recipes].filter(recipe => recipe.id !== id);\n\n    setRecipes(removedArr);\n  };\n\n  return (\n    <main className=\"main\">\n      <RecipeForm onSubmit={addRecipe} />\n      <Recipe\n        recipes={recipes}\n        removeRecipe={removeRecipe}\n        updateRecipe={updateRecipe}\n      />\n    </main>\n  );\n}\n\nexport default RecipeList;\n"]},"metadata":{},"sourceType":"module"}